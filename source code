#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

// === Konfigurasi NIM, MQTT, dan Topik ===
const char* ssid = "Ngegas Game Area";
const char* password = "ngegasgame";
const char* mqtt_server = "mqtt.revolusi-it.com";
const char* mqtt_user = "usm";
const char* mqtt_pass = "usmjaya1";
const char* clientId = "G.231.22.0062";
const char* topik = "iot/G.231.22.0062";

// === Pin DHT, LM35, LCD, LED ===
#define DHTPIN D4
#define DHTTYPE DHT11
#define LM35_PIN A0
#define LED1_PIN D5
#define LED2_PIN D6
#define LED3_PIN D7
#define SDA_PIN D2
#define SCL_PIN D1

// === Objek Global ===
DHT dht(DHTPIN, DHTTYPE);
WiFiClient espClient;
PubSubClient client(espClient);
LiquidCrystal_I2C lcd(0x27, 16, 2);

// === Koneksi Wifi ===
void setup_wifi()
{
  Serial.print("Menghubungkan ke ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print('.');
  }
  Serial.print("WiFi terhubung, IP: ");
  Serial.println(WiFi.localIP());  
}

// === Koneksi MQTT ===
void reconnect()
{
  while (!client.connected()) {
    Serial.print("Menghubungkan MQTT...");
    if (client.connect(clientId, mqtt_user, mqtt_pass)) {
      Serial.println("MQTT terhubung.");
    } else {
      Serial.print("Gagal, rc=");
      Serial.print(client.state()); Serial.println(" retry 5 detik.");
      delay(5000);
    }
  }
}

// === Kontrol LED sesuai suhu ===
void setLED(int level) {
  digitalWrite(LED1_PIN, level >= 1 ? HIGH : LOW);
  digitalWrite(LED2_PIN, level >= 2 ? HIGH : LOW);
  digitalWrite(LED3_PIN, level >= 3 ? HIGH : LOW);
  Serial.print("LED level: ");
  Serial.println(level);
}

void setup()
{
  Serial.begin(115200);
  
  // Inisialisasi GPIO
  pinMode(LED1_PIN, OUTPUT);
  pinMode(LED2_PIN, OUTPUT);
  pinMode(LED3_PIN, OUTPUT);
  setLED(0);
  
  // Inisialisasi DHT
  dht.begin();

  // Inisialisasi LCD
  Wire.begin(SDA_PIN, SCL_PIN);
  lcd.init();
  lcd.backlight();

  // Hubungkan Wifi dan MQTT
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop()
{
  if (!client.connected()) reconnect();
  client.loop();

  // Baca DHT
  float suhuDHT = dht.readTemperature();

  // Baca LM35
  int analogValue = analogRead(LM35_PIN);
  float volt = analogValue * (3.3 / 1024.0);
  float suhuLM35 = volt * 100;

  Serial.print("DHT: ");
  Serial.print(suhuDHT);
  Serial.print("°C | LM35: ");
  Serial.print(suhuLM35);
  Serial.println("°C");

  // Hitung suhu tertinggi
  float maxSuhu = max(suhuDHT, suhuLM35);
  int ledLevel = 0;
  if (maxSuhu > 30) ledLevel = 3;
  else if (maxSuhu >= 25) ledLevel = 2;
  else if (maxSuhu >= 20) ledLevel = 1;

  setLED(ledLevel);

  // Kirim data MQTT
  String payload = "{";
  payload += "\"suhuDHT\":" + String(suhuDHT, 1) + ",";
  payload += "\"suhuLM35\":" + String(suhuLM35, 1) + ",";
  payload += "\"LED\":" + String(ledLevel);
  payload += "}";

  Serial.print("Publish: ");
  Serial.println(payload);
  client.publish(topik, payload.c_str());

  // Tampilkan pada LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("DHT:");
  if (isnan(suhuDHT)) {
    lcd.print("ERR ");
  } else {
    lcd.print(suhuDHT, 1);
    lcd.print((char)223);
    lcd.print("C ");
  }
  lcd.setCursor(0, 1);
  lcd.print("LM35:");
  lcd.print(suhuLM35, 1);
  lcd.print((char)223);
  lcd.print("C L:");
  lcd.print(ledLevel);

  delay(5000);
}
